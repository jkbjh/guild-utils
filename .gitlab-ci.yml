image: python:3.8

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  # if you have private repositories in your project use a ci-token:
  # - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.example.com/group/repo.git".insteadOf git@gitlab.example.com:group/repo.git
  - python -V  # Print out python version for debugging
  - pip install nox virtualenv
  # - pip install virtualenv
  # - virtualenv venv
  # - source venv/bin/activate
  # - pip install nox
  # - pip install -r requirements.built --no-deps  # -- dependencies already listed.


stages:
  - Build
  - Static Analysis
  - Test
  - Deploy


install:
  stage: Build
  script:
    - nox --install-only -r --verbose


package_dependencies:
  stage: Deploy
  script:
    - nox -r --verbose -s package_install_only


pyflake:
  stage: Static Analysis
  allow_failure: false
  script:
    - nox -r --no-install --verbose -s pyflake


test:
  stage: Test
  allow_failure: false
  cache:
    key: nox-python-example
    paths:
      - venv
      - .nox
  script:
    - nox --verbose --no-install -r -s pytest
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - htmlcov
      - pylint.log
      - pylint.gitlab.html
      - pytest-report.xml
      - coverage.xml
    when: always
    expire_in: 1 week
    reports:
      # coverage gitlab >= 14.10
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      # coverage gitlab <= 14.09
      # cobertura: coverage.xml
      # junit: pytest-report.xml

# pages:
#   stage: deploy
#   dependencies:
#     - test
#   script:
#     - mkdir public/ -p
#     - mv pylint.gitlab.html public/pylint.gitlab.html
#     - mv htmlcov public/
#     - mv .gitlab-index.html public/index.html
#   artifacts:
#     paths:
#       - public
#     expire_in: 30 days
